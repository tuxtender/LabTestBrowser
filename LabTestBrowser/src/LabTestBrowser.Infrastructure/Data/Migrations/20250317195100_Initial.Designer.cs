// <auto-generated />
using System;
using LabTestBrowser.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabTestBrowser.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250317195100_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("LabTestBrowser.Core.ContributorAggregate.Contributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Contributors");
                });

            modelBuilder.Entity("LabTestBrowser.Core.LabTestReportAggregate.LabTestReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompleteBloodCountId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LabTestReports");
                });

            modelBuilder.Entity("LabTestBrowser.Core.ContributorAggregate.Contributor", b =>
                {
                    b.OwnsOne("LabTestBrowser.Core.ContributorAggregate.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<int>("ContributorId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Extension")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ContributorId");

                            b1.ToTable("Contributors");

                            b1.WithOwner()
                                .HasForeignKey("ContributorId");
                        });

                    b.Navigation("PhoneNumber");
                });

            modelBuilder.Entity("LabTestBrowser.Core.LabTestReportAggregate.LabTestReport", b =>
                {
                    b.OwnsOne("LabTestBrowser.Core.LabTestReportAggregate.Patient", "Patient", b1 =>
                        {
                            b1.Property<int>("LabTestReportId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Animal")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Breed")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Category")
                                .HasColumnType("TEXT");

                            b1.Property<string>("HealthcareProxy")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.HasKey("LabTestReportId");

                            b1.ToTable("LabTestReports");

                            b1.WithOwner()
                                .HasForeignKey("LabTestReportId");

                            b1.OwnsOne("LabTestBrowser.Core.LabTestReportAggregate.Age", "Age", b2 =>
                                {
                                    b2.Property<int>("PatientLabTestReportId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int?>("Days")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int?>("Months")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int?>("Years")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("PatientLabTestReportId");

                                    b2.ToTable("LabTestReports");

                                    b2.WithOwner()
                                        .HasForeignKey("PatientLabTestReportId");
                                });

                            b1.Navigation("Age")
                                .IsRequired();
                        });

                    b.OwnsOne("LabTestBrowser.Core.LabTestReportAggregate.Specimen", "Specimen", b1 =>
                        {
                            b1.Property<int>("LabTestReportId")
                                .HasColumnType("INTEGER");

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("TEXT");

                            b1.Property<int>("SequentialNumber")
                                .HasColumnType("INTEGER");

                            b1.HasKey("LabTestReportId");

                            b1.ToTable("LabTestReports");

                            b1.WithOwner()
                                .HasForeignKey("LabTestReportId");
                        });

                    b.OwnsOne("LabTestBrowser.Core.LabTestReportAggregate.SpecimenCollectionCenter", "SpecimenCollectionCenter", b1 =>
                        {
                            b1.Property<int>("LabTestReportId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Facility")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("TradeName")
                                .HasColumnType("TEXT");

                            b1.HasKey("LabTestReportId");

                            b1.ToTable("LabTestReports");

                            b1.WithOwner()
                                .HasForeignKey("LabTestReportId");
                        });

                    b.Navigation("Patient")
                        .IsRequired();

                    b.Navigation("Specimen")
                        .IsRequired();

                    b.Navigation("SpecimenCollectionCenter")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
